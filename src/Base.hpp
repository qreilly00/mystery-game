#ifndef BASE_HPP
#define BASE_HPP

#include "../inc/common.hpp"

#include "Entity.hpp"
#include "BasicShape.hpp"
#include "BasicUtils.hpp"


class Base {
private:
    // Saves the amount of time generated by the timeUtil.
    BasicUtils ut;
    float totalTime;

    sf::RenderWindow window;
    Entity player;

    std::vector<sf::FloatRect> playerBorders;
    sf::Vector2f playerMoveAmount;

    std::vector<BasicShape> collides;

public:

    // Init class.
    Base();

    // Init functions.
    void createWindow();
    void createPlayer();

    // Main Functions.
    bool gameLoop();
    bool checkControls();

    // Required by checkControls().
    float calculateFrameStep();
    void checkMoves();

    // Required by checkMoves().
    void updatePlayerBorders();

    void drawWindow();
};

#endif
